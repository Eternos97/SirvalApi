// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SirvalApi.Models.SirvalApi.Data;

#nullable disable

namespace SirvalApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609015606_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Asignacion");

                    b.Property<int>("AlertaId")
                        .HasColumnType("int")
                        .HasColumnName("Id_Alerta");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Estado_Asig");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Fecha_Asig");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FechaResol_Asig");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Observaciones_Asig");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int")
                        .HasColumnName("Id_Responsable");

                    b.HasKey("Id");

                    b.HasIndex("AlertaId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("asignaciones");
                });

            modelBuilder.Entity("Responsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Responsable");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Mail_Resp");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Nombre_Resp");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("responsables");
                });

            modelBuilder.Entity("SirvalApi.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Alerta");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Detalle_Alerta");

                    b.Property<int>("DispositivoId")
                        .HasColumnType("int")
                        .HasColumnName("Id_Dispositivo");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Fecha_Alerta");

                    b.Property<string>("Severidad")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Severidad");

                    b.Property<int>("TipoAlertaId")
                        .HasColumnType("int")
                        .HasColumnName("Id_TipoAlerta");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoId");

                    b.HasIndex("TipoAlertaId");

                    b.ToTable("registro_alertas");
                });

            modelBuilder.Entity("SirvalApi.Models.Dispositivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Dispositivo");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("IP");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Nombre_Disp");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Tipo_Disp");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Ubicacion_Disp");

                    b.HasKey("Id");

                    b.ToTable("dispositivos");
                });

            modelBuilder.Entity("TipoAlerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_TipoAlerta");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Descripcion_TipoAlerta");

                    b.HasKey("Id");

                    b.ToTable("tipos_alerta");
                });

            modelBuilder.Entity("Asignacion", b =>
                {
                    b.HasOne("SirvalApi.Models.Alerta", "Alerta")
                        .WithMany("Asignaciones")
                        .HasForeignKey("AlertaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Responsable", "Responsable")
                        .WithMany("Asignaciones")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alerta");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("SirvalApi.Models.Alerta", b =>
                {
                    b.HasOne("SirvalApi.Models.Dispositivo", "Dispositivo")
                        .WithMany("Alertas")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TipoAlerta", "TipoAlerta")
                        .WithMany("Alertas")
                        .HasForeignKey("TipoAlertaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("TipoAlerta");
                });

            modelBuilder.Entity("Responsable", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("SirvalApi.Models.Alerta", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("SirvalApi.Models.Dispositivo", b =>
                {
                    b.Navigation("Alertas");
                });

            modelBuilder.Entity("TipoAlerta", b =>
                {
                    b.Navigation("Alertas");
                });
#pragma warning restore 612, 618
        }
    }
}
